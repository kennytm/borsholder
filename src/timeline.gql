stringify![

query ($owner: String!, $repo: String!, $number: Int!) {
  repository(owner: $owner, name: $repo) {
    pullRequest(number: $number) {
      timeline(last: 10) {
        nodes {
          __typename
          ...Commit
          ... on Comment {
            author {
              login
            }
            bodyHTML
            createdAt
            editor {
              login
            }
            lastEditedAt
          }
          ... on IssueComment {
            url
          }
          ... on PullRequestReview {
            url
            state
          }
          ... on PullRequestReviewComment {
            url
          }
          ... on UniformResourceLocatable {
            url
          }
          ... on AssignedEvent {
            actor {
              login
            }
            createdAt
            user {
              login
            }
          }
          ... on CrossReferencedEvent {
            actor {
              login
            }
            createdAt
            source {
              ... on ReferencedSubject {
                __typename
                ... on Issue {
                  title
                  number
                  url
                }
                ... on PullRequest {
                  title
                  number
                  url
                }
              }
            }
          }
          ... on LabeledEvent {
            actor {
              login
            }
            createdAt
            label {
              ...Label
            }
          }
          ... on ReferencedEvent {
            actor {
              login
            }
            createdAt
            commit {
              ...Commit
            }
          }
          ... on RenamedTitleEvent {
            actor {
              login
            }
            createdAt
            previousTitle
            currentTitle
          }
          ... on ReviewDismissedEvent {
            actor {
              login
            }
            createdAt
            message
          }
          ... on ReviewRequestedEvent {
            actor {
              login
            }
            createdAt
            subject {
              login
            }
          }
          ... on ReviewRequestRemovedEvent {
            actor {
              login
            }
            createdAt
            subject {
              login
            }
          }
          ... on UnassignedEvent {
            actor {
              login
            }
            createdAt
            user {
              login
            }
          }
          ... on UnlabeledEvent {
            actor {
              login
            }
            createdAt
            label {
              ...Label
            }
          }
          ... on ClosedEvent {
            actor {
              login
            }
            createdAt
          }
          ... on ReopenedEvent {
            actor {
              login
            }
            createdAt
          }
          //# We can't report every event type yet, that will crash GitHub.
        }
      }
    }
  }
}

fragment Label on Label {
  name
  color
}

fragment Commit on Commit {
  url
  committer {
    user {
      login
    }
  }
  committedDate
  abbreviatedOid
  messageHeadline
  status {
    contexts {
      context
      description
      targetUrl
      state
    }
  }
}

]
